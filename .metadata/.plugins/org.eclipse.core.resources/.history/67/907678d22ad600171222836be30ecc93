create table prdwa17_staging.videos_seven_years distribute by hash(channelid) as
select * from prdwa17_staging.videos;
create table prdwa17_staging.videos_seven_years_backup distribute by hash(channelid) as
select * from prdwa17_staging.videos;

select count(*) from prdwa17_staging.videos_seven_years_backup;

-- Cleaning description: Removing urls
update prdwa17_staging.videos_seven_years 
set description = regexp_replace(description, '(http.+?|www.+?) ', ' ');

-- Cleaning title: Removing urls
update prdwa17_staging.videos_seven_years 
set title = regexp_replace(title, '(http.+?|www.+?) ', ' ');

-- Parsing Title
--create table prdwa17_staging.videos_parsed_titles distribute by hash(id) as
drop table prdwa17_staging.tmp;
create table prdwa17_staging.tmp distribute by hash(id) as
select id, title, TRIM(token) as term, length(TRIM(token)) ,frequency, position from text_parser(on 
(select * from prdwa17_staging.videos_seven_years)
	text_column('title')
	case_insensitive('true')
	stemming('true')
	Punctuation ('\[".,?:;!\&\+\-\=\|\]')	
	list_positions('false')
	remove_stop_words('true')
	accumulate('id', 'title')
	)
order by id;
select * from prdwa17_staging.videos_seven_years_backup;
select distinct term, sum(frequency) from prdwa17_staging.tmp group by term;
select * from prdwa17_staging.tmp;
-- Parser postprocessing
select token, length(token) from prdwa17_staging.tmp 
where token like '%\=%' OR token like '%\+%' OR token like '%\&%' OR token like '%\-%'
OR token like '%\=%';